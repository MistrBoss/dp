
package cz.sa.dovolena.server.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SimilarityQueueService", targetNamespace = "http://ws.server.dovolena.sa.cz/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SimilarityQueueService {


    /**
     * 
     * @param slaveId
     */
    @WebMethod
    @RequestWrapper(localName = "attach", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.Attach")
    @ResponseWrapper(localName = "attachResponse", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.AttachResponse")
    public void attach(
        @WebParam(name = "slave_id", targetNamespace = "")
        String slaveId);

    /**
     * 
     * @param slaveId
     */
    @WebMethod
    @RequestWrapper(localName = "detach", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.Detach")
    @ResponseWrapper(localName = "detachResponse", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.DetachResponse")
    public void detach(
        @WebParam(name = "slave_id", targetNamespace = "")
        String slaveId);

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkLogin", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.CheckLogin")
    @ResponseWrapper(localName = "checkLoginResponse", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.CheckLoginResponse")
    public boolean checkLogin();

    /**
     * 
     * @param user
     * @return
     *     returns cz.sa.dovolena.server.ws.WsChallenge
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "challenge", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.Challenge")
    @ResponseWrapper(localName = "challengeResponse", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.ChallengeResponse")
    public WsChallenge challenge(
        @WebParam(name = "user", targetNamespace = "")
        String user);

    /**
     * 
     * @param slaveId
     * @return
     *     returns cz.sa.dovolena.server.ws.SimilarityData
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDataToCompare", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.GetDataToCompare")
    @ResponseWrapper(localName = "getDataToCompareResponse", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.GetDataToCompareResponse")
    public SimilarityData getDataToCompare(
        @WebParam(name = "slave_id", targetNamespace = "")
        String slaveId);

    /**
     * 
     * @param log
     * @param slaveId
     */
    @WebMethod
    @RequestWrapper(localName = "logError", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.LogError")
    @ResponseWrapper(localName = "logErrorResponse", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.LogErrorResponse")
    public void logError(
        @WebParam(name = "slave_id", targetNamespace = "")
        String slaveId,
        @WebParam(name = "log", targetNamespace = "")
        String log);

    /**
     * 
     * @param user
     * @param pass
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.LoginResponse")
    public boolean login(
        @WebParam(name = "user", targetNamespace = "")
        String user,
        @WebParam(name = "pass", targetNamespace = "")
        String pass);

    /**
     * 
     * @param challenge
     * @param user
     * @param pass
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "challengeLogin", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.ChallengeLogin")
    @ResponseWrapper(localName = "challengeLoginResponse", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.ChallengeLoginResponse")
    public boolean challengeLogin(
        @WebParam(name = "user", targetNamespace = "")
        String user,
        @WebParam(name = "pass", targetNamespace = "")
        String pass,
        @WebParam(name = "challenge", targetNamespace = "")
        Long challenge);

    /**
     * 
     * @param result
     * @param slaveId
     */
    @WebMethod
    @RequestWrapper(localName = "submitResult", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.SubmitResult")
    @ResponseWrapper(localName = "submitResultResponse", targetNamespace = "http://ws.server.dovolena.sa.cz/", className = "cz.sa.dovolena.server.ws.SubmitResultResponse")
    public void submitResult(
        @WebParam(name = "slave_id", targetNamespace = "")
        String slaveId,
        @WebParam(name = "result", targetNamespace = "")
        SimilarityData result);

}
